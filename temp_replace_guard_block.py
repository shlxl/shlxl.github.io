from pathlib import Path
path = Path('docs/.vitepress/config.ts')
text = path.read_text(encoding='utf-8')
old = "\n\nfunction patchLocalDraftFsGuard() {\n  const original = fs.promises?.readFile as typeof fs.promises.readFile | undefined;\n  if (!original) return;\n  if ((original as any).__xlLocalDraftGuard) return;\n\n  const localDraftRoot = path.resolve(process.cwd(), 'docs/blog/_local').replace(/\\/g, '/');\n\n  const wrapped: typeof fs.promises.readFile = (async (file: Parameters<typeof fs.promises.readFile>[0], ...rest: any[]) => {\n    try {\n      return await original.call(fs.promises, file as any, ...(rest as [any]));\n    } catch (error: any) {\n      if (error?.code === 'ENOENT') {\n        const target = typeof file === 'string'\n          ? path.resolve(file).replace(/\\/g, '/')\n          : '';\n        if (target && target.startsWith(localDraftRoot)) {\n          console.warn('[vitepress] skipped missing local draft', target);\n          const option = rest[0];\n          const encoding = typeof option === 'string'\n            ? option\n            : option && typeof option === 'object'\n              ? (option as { encoding?: BufferEncoding }).encoding\n              : undefined;\n          if (encoding) {\n            return '' as any;\n          }\n          return Buffer.alloc(0) as any;\n        }\n      }\n      throw error;\n    }\n  }) as typeof fs.promises.readFile;\n\n  (wrapped as any).__xlLocalDraftGuard = true;\n  fs.promises.readFile = wrapped;\n}\n\nfunction patchSugaratProvidePageData<T>(theme: T): T {\n  return theme;\n}\n\nfunction primeCategoryNavSync() {\n  try {\n    const result = safeSyncCategoryNav()\n    if (result && result.ok === false) {\n      console.warn('[vitepress] failed to prime category nav', result.error)\n    }\n  } catch (err) {\n    console.warn('[vitepress] failed to prime category nav', err)\n  }\n}\n"
new = "\n\nfunction patchLocalDraftFsGuard() {\n  const original = fs.promises?.readFile as typeof fs.promises.readFile | undefined\n  if (!original) return\n  if ((original as any).__xlLocalDraftGuard) return\n\n  const localDraftRoot = path.resolve(process.cwd(), 'docs/blog/_local').replace(/\\/g, '/')\n\n  const wrapped: typeof fs.promises.readFile = (async (file: Parameters<typeof fs.promises.readFile>[0], ...rest: any[]) => {\n    try {\n      return await original.call(fs.promises, file as any, ...(rest as [any]))\n    } catch (error: any) {\n      if (error?.code === 'ENOENT') {\n        const target = typeof file === 'string'\n          ? path.resolve(file).replace(/\\/g, '/')\n          : ''\n        if (target && target.startsWith(localDraftRoot)) {\n          console.warn('[vitepress] skipped missing local draft', target)\n          const option = rest[0]\n          const encoding = typeof option === 'string'\n            ? option\n            : option && typeof option === 'object'\n              ? (option as { encoding?: BufferEncoding }).encoding\n              : undefined\n          if (encoding) {\n            return '' as any\n          }\n          return Buffer.alloc(0) as any\n        }\n      }\n      throw error\n    }\n  }) as typeof fs.promises.readFile\n\n  (wrapped as any).__xlLocalDraftGuard = true\n  fs.promises.readFile = wrapped\n}\n\nfunction patchSugaratProvidePageData<T>(theme: T): T {\n  return theme\n}\n\nfunction primeCategoryNavSync() {\n  try {\n    const result = safeSyncCategoryNav()\n    if (result && result.ok === false) {\n      console.warn('[vitepress] failed to prime category nav', result.error)\n    }\n  } catch (err) {\n    console.warn('[vitepress] failed to prime category nav', err)\n  }\n}\n"
if old not in text:
    raise SystemExit('pattern not found')
text = text.replace(old, new)
path.write_text(text, encoding='utf-8')
